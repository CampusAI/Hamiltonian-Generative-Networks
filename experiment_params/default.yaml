# Define environment
environment:
  name: "Pendulum"
  mass: 0.5
  length: 1
  g: 3

# Define rollout
rollout:
  seq_length: 30
  delta_time: 0.1
  n_channels: 3

# Define networks architectures
networks:
  encoder:
    hidden_conv_layers: 6
    n_filters: [32, 64, 64, 64, 64, 64, 64]
    kernel_sizes: [3, 3, 3, 3, 3, 3, 3, 3]
    strides: [1, 1, 1, 1, 1, 1, 1, 1]
    out_channels: 48
  transformer:
    hidden_conv_layers: 2
    n_filters: [64, 64, 64]
    kernel_sizes: [3, 3, 3, 3]
    strides: [2, 2, 2, 1]
    out_channels: 32
  hamiltonian:
    hidden_conv_layers: 6
    in_shape: [16, 4, 4]  # Should be coherent with transformer output
    n_filters: [32, 64, 64, 64, 64, 64, 64, 64]
    kernel_sizes: [3, 3, 3, 3, 3, 3, 3, 3]
    strides: [1, 1, 1, 1, 1, 1, 1, 1]
  decoder:
    n_residual_blocks: 3
    n_filters: [64, 64]
    kernel_sizes: [3, 3, 3]
    upsample: [True, True, True]

# Define HGN Integrator
integrator:
  method: "Euler"

# Define optimization
optimization:
  training_steps: 1
  batch_size: 1
  # Learning rates
  encoder_lr: 1.5e-4
  transformer_lr: 1.5e-4
  hnn_lr: 1.5e-4
  decoder_lr: 1.5e-4